{
    "projects": [
      {
        "name": "HateMatch - Dating Platform Web Application",
        "technologies": "Vue, Vuetify, Java, Spring",
        "description": "<strong>Dating platform</strong> web application that connects users through shared dislikes and contrasting preferences.",
        "highlights": [
          "<strong>Designed and developed</strong> the entire frontend using Vue and Vuetify, including <strong>user authentication</strong>, <strong>profile management</strong>, and simple interactive <strong>matching interface</strong>.",
          "Engineered <strong>custom Vuetify theme</strong> and a <strong>context sensitive floating cursor</strong> for fun profile navigation, elevating UX.",
          "Integrated Java Spring backend for <strong>secure user authentication</strong> and data management.",
          "Prototyped <strong>matching algorithm</strong> using pairwise user preference negation, enabling MVP-level functionality with future optimization in mind."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Custom Blog Platform",
        "technologies": "Hugo, Tailwind, Three.js, FFMPEG",
        "description": "<strong>Responsive static blog</strong> platform with custom Hugo theme, Tailwind styling, and embedded 3D content.",
        "highlights": [
          "Built a <strong>UI framework</strong> with custom snippets for grid-based elements, dropdown reveals, <strong>animated thumbnails</strong>, <strong>embedded Three.js</strong>, and <strong>filtering using tags and categories</strong>.",
          "Developed <strong>parallax scrolling effects</strong> with tag-based filtering systems, creating a visually engaging browsing experience.",
          "Ensured <strong>subtle animations for most interactable elements</strong>, making all user interactions feel polished but doesn't get in the way of the content."
        ],
        "url": "www.example.com"
      },
      {
        "name": "ATK Generator",
        "technologies": "Electron, Python, Blender-CLI",
        "description": "<strong>Cross-platform desktop app</strong> generating photorealistic ATK test results with handwritten timestamps.",
        "highlights": [
          "Developed a <strong>desktop app</strong> enabling users to input metadata and <strong>generate photorealistic ATK test images</strong> with handwritten timestamps with preset environments.",
          "Modeled and surfaced <strong>high-poly 3D ATK asset</strong> using Blender, Substance Painter, and Designer.",
          "Engineered a Python backend with <strong>Blender CLI</strong> to automate input textures and render jobs based on user-defined parameters."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Separable Convolution Circular Lens Blur",
        "technologies": "C#, MATLAB, HLSL, Unity-URP",
        "description": "<strong>Efficient real-time</strong> Bokeh blur post-processing effect using separable convolution in phasor domain.",
        "highlights": [
          "Implemented a post-processing Bokeh blur algorithm with <strong>O(n) runtime</strong> instead of O(n²) using separable convolution in imaginary phasor space.",
          "Prototyped algorithm in MATLAB then ported to <strong>Unity HDRP</strong> using ShaderLab HLSL, enabling real-time cinematic lens effects."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Interactive Pathfinding Algorithm Visualizer",
        "technologies": "C#, HLSL, Unity-URP",
        "description": "<strong>Real-time</strong> pathfinding algorithm visualizer with modular search support and interactive UI.",
        "highlights": [
          "Built a real-time algorithm visualizer supporting <strong>multiple search algorithms</strong> with modular architecture.",
          "Developed an <strong>event-driven UI system</strong> with dynamic updates and heuristic cost overlays.",
          "Integrated <strong>real-time performance metrics</strong> and intuitive grid editor for scenario customization."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Faithful Plant Placement",
        "technologies": "VEX, OpenCL, C++, Python, HLSL, Houdini-Engine, UE5",
        "description": "<strong>Procedural vegetation simulation</strong> tools for Unreal Engine 5 based on environmental data.",
        "highlights": [
          "Developed <strong>procedural simulation tools</strong> for vegetation placement using climate, topology, and species data.",
          "Implemented <strong>adaptive placement algorithms</strong> and seeding logic using iterative optimization.",
          "Rendered <strong>photorealistic snapshots</strong> supporting simulation accuracy and art direction."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Passive Matrix LCD Shader",
        "technologies": "GLSL, Godot, C#",
        "description": "<strong>Procedural shader</strong> simulating optical effects of monochrome passive matrix LCD displays.",
        "highlights": [
          "Simulated <strong>optical effects</strong> like parallax shadows, shimmer, and backlight bleed.",
          "<strong>Engineered</strong> a <strong>procedural pixel matrix</strong> using <strong>GLSL</strong> for authentic LCD rendering with arbitrary buffer inputs.",
          "Optimized shader performance for <strong>real-time applications</strong>."
        ],
        "url": "www.example.com"
      },
      {
        "name": "GPU-Based Monte Carlo Global Illumination & Irradiance Field Probes",
        "technologies": "C++, GLSL, Compute-Shaders, Dear-IMGUI",
        "description": "<strong>Real-time global illumination</strong> system using GPU Monte Carlo methods and irradiance probes.",
        "highlights": [
          "Developed a <strong>high-performance GI system</strong> with Monte Carlo methods for accurate light transport simulation.",
          "Implemented <strong>GPU-based compute shaders</strong> for ray marching in Signed Distance Field (SDF) environments.",
          "Designed an <strong>irradiance probe system</strong> for indirect lighting, optimizing computational efficiency.",
          "Benchmarked <strong>Monte Carlo GI vs. irradiance probes</strong>, showing <strong>8x speedup</strong> while retaining realism."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Hello Mascot",
        "technologies": "Unity, C#, Google-MediaPipe",
        "description": "<strong>Interactive mascot demo</strong> enabling full-body pose tracking and stylized GPU shaders.",
        "highlights": [
          "Enabled <strong>full-body interactions</strong> using Google MediaPipe pose tracking.",
          "Designed <strong>GPU shaders</strong> for stylized visuals and procedural sprite based facial animation via UV sets and blending.",
          "Modeled and animated high-fidelity characters for <strong>live installations</strong>.",
          "Delivered a successful <strong>proof-of-concept</strong> for internal company's product portfolio."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Seamless City - Bangkok Design Week 2024",
        "technologies": "Unity, C#, Intel-RealSense",
        "description": "<strong>Multiplayer 3D installation</strong> showcased at Bangkok Design Week 2024 with advanced graphics and depth sensing.",
        "highlights": [
          "Implemented <strong>advanced graphics</strong>: multifocal vignetting, cloth dynamics, SDF-based collisions, and interactive bloom/glare.",
          "Extended <strong>Intel RealSense C# API</strong> for onsite depth camera calibration.",
          "Praised by <strong>200+ attendees</strong> for it's unique multiplayer interaction."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Mini Sky Engine",
        "technologies": "OpenGL, C#, GLSL, OpenTK, Dear-IMGUI",
        "description": "<strong>Atmospheric rendering engine</strong> simulating sky scattering and volumetric clouds in real-time.",
        "highlights": [
          "Simulated <strong>atmospheric effects</strong> with sunlight, sky scattering, and volumetric clouds using GPU LUTs.",
          "Built raymarcher render engine with <strong>FBM noise</strong> and procedural density shaping for clouds.",
          "Built <strong>engine architecture</strong> in C# with shader management and IMGUI for debug GUI."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Brackey's Game Jam 2024.2 - Lights Out",
        "technologies": "Godot, GdScript, GLSL",
        "description": "<strong>Stylized 2D game prototype</strong> developed for Brackey’s Game Jam 2024.2 with GPU-accelerated VFX.",
        "highlights": [
          "Developed <strong>palette remapping</strong> and <strong>dynamic film grain shaders</strong> for tense visual aesthetic.",
          "Implemented <strong>GPU-accelerated VFX</strong> and 2D light system for various pickable items and envrioment lights.",
          "Programmed <strong>gameplay systems</strong>: torch combat, sanity, audio, and transitions.",
          "Designed all <strong>game sound special effects</strong> and wrangled them into the game engine and game systems."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Shell + Terminal Animation Library",
        "technologies": "C++",
        "description": "<strong>Custom Linux shell</strong> with animated terminal UX, command parsing, and job control.",
        "highlights": [
          "<strong>Built a simplified Linux shell</strong> with interactive and batch modes, featuring <strong>custom command parsing</strong>, <strong>built-in commands</strong> (<code>echo</code>, <code>!!</code>, <code>jobs</code>, etc.), and <strong>I/O redirection</strong> using <code>fork</code>, <code>exec</code>, and <code>wait</code>.",
          "<strong>Implemented job control</strong> for <strong>foreground/background processes</strong>, <strong>signal handling</strong> (<code>SIGINT</code>, <code>SIGTSTP</code>), and <strong>asynchronous notifications</strong> for background jobs.",
          "<strong>Designed a bash-like UX</strong> with <strong>prev command history</strong>, <strong>custom prompts</strong>, <strong>true-color text formatting</strong>, and <strong>splash screen animations</strong> using flip-book rendering and animated UI elements."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Web Server",
        "technologies": "C++",
        "description": "<strong>Built a multi-threaded web server</strong> in <strong>C++</strong>, supporting a subset of <strong>HTTP/1.1 (RFC2616)</strong> and <strong>CGI-based POST request handling (RFC3875)</strong>.",
        "highlights": [
          "I<strong>Implemented request parsing</strong>, <strong>response generation</strong>, and <strong>dynamic content integration</strong> using <strong>YACC</strong> for structured input processing.",
          "<strong>Designed concurrency architecture</strong> to efficiently handle multiple client connections and serve dynamic responses in real-time using threads."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Single Cycle MIPS Simulator",
        "technologies": "C++",
        "description": "<strong>Developed an instruction-level simulator</strong> for a subset of the <strong>MIPS architecture</strong>, supporting execution with <strong>accurate state transitions</strong> and <strong>core instruction emulation</strong> (arithmetic, branching, memory, system calls).",
        "highlights": [
          "<strong>Implemented instruction parsing</strong>, <strong>decoding</strong>, and <strong>shell-based execution controls</strong> (<code>go</code>, <code>run &lt;n&gt;</code>, <code>mdump</code>, <code>rdump</code>, etc.) with structured modeling of <strong>registers</strong>, <strong>memory</strong>, and <strong>program counter</strong>.",
          "<strong>Integrated endian-aware memory functions</strong> and <strong>verified correctness</strong> through simulation logs, register dumps, and extensive debugging."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Streaming Data Pipeline & Exploratory Data Analysis",
        "technologies": "Python, Kafka, DuckDB",
        "description": "<strong>Real-time data pipeline</strong> integrating financial and event streams for time-series analysis.",
        "highlights": [
          "<strong>Developed a real-time data pipeline</strong> integrating <strong>financial market data</strong> (Yahoo Finance) and <strong>global event streams</strong> (GDELT) using <strong>Kafka</strong>, with <strong>ETL workflows</strong> for ingestion, cleaning, and transformation.",
          "<strong>Optimized data storage</strong> by converting <code>.CSV.zip</code> to <strong>Snappy-compressed Parquet</strong>, enabling fast, SQL-based analytics via <strong>DuckDB</strong> and reducing query latency.",
          "<strong>Applied time-series analysis</strong> and <strong>statistical hypothesis testing</strong> (Pearson correlation, Granger causality) to uncover relationships between <strong>media coverage</strong> and <strong>stock market movements</strong> across sectors."
        ],
        "url": "www.example.com"
      },
      {
        "name": "Streaming Data Pipeline & Real-Time Visualization",
        "technologies": "Python, Kafka, Elasticsearch, Kibana",
        "description": "<strong>Real-time financial visualization</strong> platform using Kafka, Elasticsearch, and Kibana dashboards.",
        "highlights": [
          "B<strong>Built a real-time streaming data pipeline</strong> integrating <strong>financial market</strong> and <strong>currency exchange data</strong> from <strong>Alpaca Stream API</strong> and <strong>Free Currency API</strong> using <strong>Kafka</strong> for ingestion and <strong>Elasticsearch</strong> for storage and indexing.",
          "<strong>Engineered Elasticsearch queries</strong> for <strong>structured search</strong>, <strong>filtering</strong>, and <strong>aggregation</strong>, optimizing <strong>data retrieval</strong> and enabling real-time insights into financial trends and correlations.",
          "<strong>Designed interactive dashboards</strong> in <strong>Kibana</strong> and applied <strong>time-series analysis</strong> and <strong>ETL transformations</strong> for efficient data processing, schema optimization, and trend visualization across top companies and sectors."
        ],
        "url": "www.example.com"
      },
      {
        "name": "E-Sports Minecraft Modding and Server DevOps",
        "technologies": "Java, Docker, HTML, JS, FFmpeg-(WebM), Python, Unix",
        "description": "<strong>E-sports competition platform</strong> with modding, server deployment, and participant coordination.",
        "highlights": [
          "Managed <strong>end-to-end competition logistics</strong>, including scheduling and participant coordination.",
          "Deployed <strong>dockerized game servers</strong> for matches, ensuring reproducibility and stability.",
          "Programmed <strong>custom mods</strong> by forking plugins to enforce competition rules and enhance gameplay.",
          "Built static websites and assets for onboarding and competition information using GitHub Pages.",
          "Created a <strong>registration dashboard</strong> using Python and Google Workspace API for seamless participant management."
        ],
        "url": "www.example.com"
      },
      {
        "name": "JSON-Based Resume Generator",
        "technologies": "Flask, Jinja2, Tailwind, PostCSS, JavaScript, SSE",
        "description": "<strong>Automated resume generator</strong> creating position-specific resumes from JSON using Flask and Jinja2.",
        "highlights": [
          "Engineered a <strong>Flask and Jinja2</strong> web application that generates position-specific resumes from JSON data sources.",
          "Implemented <strong>server-sent events</strong> (SSE) via subprocesses to provide real-time updates during resume generation.",
          "Developed a <strong>filesystem watching system</strong> that automatically rebuilds resumes when source content changes.",
          "Created an <strong>index interface</strong> to <strong>browse all generated resumes</strong> for each position.",
          "Designed a <strong>modern Harvard-style</strong> theme using Tailwind CSS with PostCSS processing."
        ],
        "url": "www.example.com"
      }
    ]
  }